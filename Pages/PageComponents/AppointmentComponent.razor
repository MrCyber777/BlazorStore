@inherits OwningComponentBase<AppointmentService>
@inject NavigationManager _navManager


<AuthorizeView Roles="@SD.User">
    <div class="row my-3 mx-0" style="background-color:#ffdbdb">
        <div class="col-1">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" value="isChecked" @onchange="SameAddressHandler" style="height: 30px; width: 30px">
            </div>
        </div>
        <div class="col">
            <label class="form-check-label ml-3" for="checkbox-3" style="font-size: 30px;">Same Address?</label>
        </div>
    </div>
</AuthorizeView>
    <div class="my-4 p-4 row">
        <EditForm Model="Appointment" OnValidSubmit="ValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="row">
                <div class="col-sm-12  col-md-3 pb-3">
                    <div class="form-group">
                        <label>Name:</label>
                        <InputText class="form-control" @bind-Value="Appointment.CustomerName" />
                    </div>
                </div>
                <div class="col-sm-12  col-md-3">
                    <div class="form-group">
                        <label>Last Name:</label>
                        <InputText class="form-control" @bind-Value="Appointment.CustomerSurname" />
                    </div>
                </div>
                <div class="col-sm-12  col-md-3">
                    <div class="form-group">
                        <label>Phone Number:</label>
                        <InputText class="form-control" @bind-Value="Appointment.CustomerPhoneNumber" />
                    </div>
                </div>
                <div class="col-sm-12  col-md-3">
                    <div class="form-group">
                        <label>Email:</label>
                        <InputText class="form-control" @bind-Value="Appointment.CustomerEmail" />
                    </div>
                </div>

                <div class="col-sm-12  col-md-3">
                    <div class="form-group">
                        <label>Address:</label>
                        <InputText class="form-control" @bind-Value="Appointment.Address" />
                    </div>
                </div>

                <div class="col-sm-12  col-md-3">
                    <div class="form-group">
                        <label>Country:</label>
                        <InputText class="form-control" @bind-Value="Appointment.Country" />
                    </div>
                </div>
                <div class="col-sm-12  col-md-3">
                    <div class="form-group">
                        <label>City:</label>
                        <InputText class="form-control" @bind-Value="Appointment.City" />
                    </div>
                </div>
                <div class="col-sm-12  col-md-3">
                    <div class="form-group">
                        <label>ZIP:</label>
                        <InputNumber class="form-control" @bind-Value="Appointment.Zip" />
                    </div>
                </div>
                <div class="col-sm-12  col-md-3">
                    <div class="form-group">
                        <label>Appointment Day:</label>
                        <InputDate class="form-control" style="width: 100%" @bind-Value="Appointment.AppointmentDay" />
                    </div>
                </div>

                <div class="col-sm-12  col-md-3">
                    <div class="form-group">
                        <label>Appointment Time:</label>
                        <input type="time" class="form-control" @bind="Appointment.AppointmentTime" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-12  col-md-5">
                    <div class="form-group">
                        <button class="btn btn-danger form-control" @onclick="OnClose" type="button">Close</button>
                    </div>
                </div>
                <div class="col-sm-12  col-md-5">
                    <div class="form-group">
                        <button class="btn btn-success form-control" type="submit">Make Appointment</button>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>

@code
{
    bool isChecked = false;

    [Parameter] public Appointment Appointment { get; set; }
    [Parameter] public List<Product> Products { get; set; }

    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnDelete { get; set; }

    async Task ValidSubmit()
    {
        int result = await Service.CreateAppointmentAsync(Appointment, Products);
        if (!result.Equals(0))
        {
            // TODO: Написать метод расширения для конвертации ID в Base64
            //string stringId = result.ToString();
            //string base64String = stringId.ToBase64();
            //_navManager.NavigateTo($"confirm/{base64String}");

            _navManager.NavigateTo($"confirm/{result.ToString().ToBase64()}");
            // TODO: Создать компонент страницы Confirm
            // TODO: Написать метод обратной конвертации из Base64 в int
            // TODO: Вывести в компонент всю информацию о заказе
        }
    }
    async Task SameAddressHandler()
    {
        isChecked = !isChecked;
        if (isChecked)
        {
            var currentUser = await Service.GetCurrentUserAsync();
            Appointment.Address = currentUser.Address;
            Appointment.City = currentUser.City;
            Appointment.Country = currentUser.Country;
            Appointment.CustomerEmail = currentUser.Email;
            Appointment.CustomerName = currentUser.FirstName;
            Appointment.CustomerSurname = currentUser.LastName;
            Appointment.CustomerPhoneNumber = currentUser.PhoneNumber;
            Appointment.Zip = currentUser.Zip;
            Appointment.AppointmentDay = DateTime.Now.AddDays(14);

        }
        else
        {
            Appointment = new();
            Appointment.AppointmentDay = DateTime.Now;
        }
        StateHasChanged();

    }

}