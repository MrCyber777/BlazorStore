<div class="modal" tabindex="-1" style="display:block;">

    <EditForm Model="appointmentObj" OnValidSubmit="OnValidSubmitHandler">

        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title  text-info">@((appointmentObj.Id.Equals(0)) ? "Create" : "Update")Update Appointment</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnCloseModal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="row form-group">
                        <div class="col-3">Product Name</div>
                        <div class="col-5">
                            <input type="text" class="form-control" @bind-value="appointmentObj.CustomerName" />
                        </div>
                    </div>
                    @*//TODO*@

                    <div class="row form-group">
                        <div class="col-3">Category Name</div>
                        <div class="col-5">
                            <select @onchange="@((args) => OnSelectionCategoryChanged.InvokeAsync(args))" class="form-control">
                                @if (productObj.Id.Equals(0))
                                {
                                    <option value="">Select category</option>
                                }
                                @foreach (var item in Categories)
                                {
                                    <option value="@item.Id" selected="@((item.Id == productObj.CategoryId) ? true : false)">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row form-group">
                        <div class="col-3">Special Tag</div>
                        <div class="col-5">
                            <select @onchange="@((args) => OnSelectionSpecialTagsChanged.InvokeAsync(args))" class="form-control">
                                @if (productObj.Id.Equals(0))
                                {
                                    <option value="">Select Special Tag</option>
                                }
                                @foreach (var item in SpecialTags)
                                {
                                    <option value="@item.Id" selected="@((item.Id==productObj.SpecialTagId)?true:false)">@item.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-3">Price</div>
                        <div class="col-5">
                            <input type="text" class="form-control" @bind-value="productObj.Price" />
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-3">ShadeColor</div>
                        <div class="col-5">
                            <input type="text" class="form-control" @bind-value="productObj.ShadeColor" />
                        </div>
                    </div>
                   
                    <!--<div class="row">
    <div class="col-4">Product</div>
    <div class="col">-->
                    @* @bind-Value создаёт в автоматическом режиме делегат и событие @onchange, которое невозможно изменить *@
                    @* @bind создаёт по умолчанию делегат и событие @onchange, который можно изменить на свой, путём указания @bind:event *@
                    <!--<InputText type="text" class="form-control" @bind-Value="productObj.Name" />
            <ValidationMessage For="@(() =>productObj.Name)" />
        </div>
    </div>-->
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary" data-dismiss="modal">Save Changes</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="OnCloseModal">Close</button>
                </div>
            </div>
        </div>

    </EditForm>
</div>

@code {
    [Parameter] public EventCallback OnCloseModal { get; set; }
    [Parameter] public EventCallback OnValidSubmitHandler { get; set; }

    [Parameter] public List<Appointment> Appointments { get; set; }
    [Parameter] public Appointment appointmentObj { get; set; }

}
