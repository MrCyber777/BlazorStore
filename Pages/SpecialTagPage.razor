@page "/specialtag"
@inject SpecialTagService _db
<div class="container-fluid p-4">
    <div class="row justify-content-between border border-info">
        <div class="col-sm-12 col-md-5">
            <h1 class="text-info">SpecialTag List</h1>
        </div>
        <div class="col-sm-12 col-md-3 text-right">
            <button type="button" class="btn btn-info form-control my-2" @onclick="AddNewSpecialTag">Add a new special tag</button>
        </div>
    </div>
    @if (specialTags is null)
    {
        <div class="row">
            <div class="col text-center">
                <img src="https://media2.giphy.com/media/3oEjI6SIIHBdRxXI40/200.gif" height="200" />
            </div>
        </div>
    }
    else if (specialTags.Any())
    {
        <div class="row">
            <table class="table table-striped">
                <thead class="bg-info">
                    <tr>
                        <th>Special tag name:</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in specialTags)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td class="text-right">
                                <button class="btn btn-primary" type="button" @onclick="(()=>EditSpecialTagHandler(item))">Update</button>                               
                                <button class="btn btn-primary"type="button" @onclick="(()=>DetailsSpecialTagHandler(item))">Details</button>                             
                                <button class="btn btn-danger"  type="button" @onclick="(()=>DeleteSpecialTagHandler(item))">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td></td>
                        <td>
                            SpecialTags Count: @specialTags.Count
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col text-center">
                <img src="https://cdn.dribbble.com/users/1231865/screenshots/11157048/media/bc9427646c632ded563ee076fdc5dfda.jpg?compress=1&resize=400x300" height="200" />
            </div>
        </div>
    }
</div>
@if (showModal)
{
    <div class="modal" tabindex="-1" style="display:block;">

        <EditForm Model="specialTagObj" OnValidSubmit="@ValidSubmitHandler">
           
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title  text-info">@((specialTagObj.Id.Equals(0)) ? "Create" : "Update") Special Tag</h4>                  
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="CloseModal">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="row">
                            <div class="col-4">Special Tag</div>
                            <div class="col">
                                @* @bind-Value создаёт в автоматическом режиме делегат и событие @onchange, которое невозможно изменить *@
                                @* @bind создаёт по умолчанию делегат и событие @onchange, который можно изменить на свой, путём указания @bind:event *@
                                <InputText type="text" class="form-control" @bind-Value="specialTagObj.Name" />
                                <ValidationMessage For="@(() =>specialTagObj.Name)" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="CloseModal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </div>

        </EditForm>
    </div>
}


@code {
    List<SpecialTag> specialTags;
    SpecialTag specialTagObj = new();
    bool showModal = false;
 

    protected override async Task OnInitializedAsync()
    {
        specialTags = await _db.GetAllSpecialTagsAsync();
    }
    void AddNewSpecialTag()
    {
        specialTagObj = new();
        specialTagObj.Id = 0;
        showModal = true;
    }
    void CloseModal()
    {
        showModal = false;
    }
    async Task ValidSubmitHandler()
    {
        bool result = false;
        showModal = false;
        if (specialTagObj.Id.Equals(0))
        {
            result = await _db.CreateSpecialTagAsync(specialTagObj);
        }
        else
        {
            result = await _db.UpdateSpecialTagAsync(specialTagObj);
        }
        specialTags = await _db.GetAllSpecialTagsAsync();
    }
    void EditSpecialTagHandler(SpecialTag specialTagForEdit)
    {
        specialTagObj = specialTagForEdit;
        showModal = true;
    }
    async Task DeleteSpecialTagHandler(SpecialTag specialTagForDeletion)
    {
        bool result = false;
        result = await _db.DeleteSpecialTagAsync(specialTagForDeletion);
        specialTags.Clear();
        specialTags = await _db.GetAllSpecialTagsAsync();
    }
    async Task DetailsSpecialTagHandler(SpecialTag specialTagDetails)
    {
        bool result = false;
        specialTagObj = specialTagDetails;
        result = await _db.GetDetailsTagAsync(specialTagDetails);
        showModal = true;
    }

}
